#!/usr/bin/env ruby

require_relative "../lib/envelopes" # this loads all the library files

module Envelopes 
  class Interface < Thor

    no_commands do
      def current_user
        CurrentUser.current_user
      end
    end

    desc "log_in NAME", "log in"
    def log_in(name)
      CurrentUser.log_in(name)
    end

    desc "who_is_logged_in", "prints logged in user"
    def who_is_logged_in
      puts current_user
    end

    desc "create_envelope LIST", "create empty envelope"
    def create_envelope(*categories)
      Budget.create_new_categories(categories, Store.new(current_user))
    end

    desc "view_envelopes", "view envelopes and their contents"
    def view_envelopes
      puts Budget.list_of_categories(Store.new(current_user))
    end

    desc "add_money_to_envelopes AMT", "add money to each envelope"
    def add_money_to_envelopes(amt)
      amt = amt.to_i
      cats = Budget.list_of_category_names(Store.new(current_user))
      amounts_to_add = IncomeAllocation.start(amt, cats)
      Budget.add_money_to_categories(amounts_to_add, Store.new(current_user))
    end

    desc "spend_money AMT CATEGORY", "spend_money from envelope"
    def spend_money(amt, category)
      Budget.spend_money(amt, category, Store.new(current_user))
    end
  end
end

Envelopes::Interface.start(ARGV)